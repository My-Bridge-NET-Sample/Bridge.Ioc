Bridge.assembly("Bridge.EasyTests", function ($asm, globals) {
    "use strict";


    var $m = Bridge.setMetadata,
        $n = [System,System.Reflection,System.Collections.Generic,Bridge.EasyTests,Bridge.EasyTests.Exceptions,Bridge.EasyTests.Attributes,Bridge.EasyTests.Asserts];
    $m($n[3].App, function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Main","is":true,"t":8,"sn":"Main","rt":$n[0].Void}]}; });
    $m($n[3].TestDescriptor, function () { return {"att":1048576,"a":4,"m":[{"a":2,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"RunTest","t":8,"sn":"RunTest","rt":$n[0].Void},{"a":2,"n":"Error","t":16,"rt":$n[0].String,"g":{"a":2,"n":"get_Error","t":8,"rt":$n[0].String,"fg":"Error"},"fn":"Error"},{"a":2,"n":"FailAssert","t":16,"rt":$n[0].Exception,"g":{"a":2,"n":"get_FailAssert","t":8,"rt":$n[0].Exception,"fg":"FailAssert"},"s":{"a":2,"n":"set_FailAssert","t":8,"p":[$n[0].Exception],"rt":$n[0].Void,"fs":"FailAssert"},"fn":"FailAssert"},{"a":2,"n":"Group","t":16,"rt":$n[0].String,"g":{"a":2,"n":"get_Group","t":8,"rt":$n[0].String,"fg":"Group"},"s":{"a":2,"n":"set_Group","t":8,"p":[$n[0].String],"rt":$n[0].Void,"fs":"Group"},"fn":"Group"},{"a":2,"n":"GroupDescription","t":16,"rt":$n[0].String,"g":{"a":2,"n":"get_GroupDescription","t":8,"rt":$n[0].String,"fg":"GroupDescription"},"s":{"a":2,"n":"set_GroupDescription","t":8,"p":[$n[0].String],"rt":$n[0].Void,"fs":"GroupDescription"},"fn":"GroupDescription"},{"a":2,"n":"Method","t":16,"rt":$n[1].MethodInfo,"g":{"a":2,"n":"get_Method","t":8,"rt":$n[1].MethodInfo,"fg":"Method"},"s":{"a":2,"n":"set_Method","t":8,"p":[$n[1].MethodInfo],"rt":$n[0].Void,"fs":"Method"},"fn":"Method"},{"a":2,"n":"Name","t":16,"rt":$n[0].String,"g":{"a":2,"n":"get_Name","t":8,"rt":$n[0].String,"fg":"Name"},"s":{"a":2,"n":"set_Name","t":8,"p":[$n[0].String],"rt":$n[0].Void,"fs":"Name"},"fn":"Name"},{"a":2,"n":"NameDescription","t":16,"rt":$n[0].String,"g":{"a":2,"n":"get_NameDescription","t":8,"rt":$n[0].String,"fg":"NameDescription"},"s":{"a":2,"n":"set_NameDescription","t":8,"p":[$n[0].String],"rt":$n[0].Void,"fs":"NameDescription"},"fn":"NameDescription"},{"a":2,"n":"Stack","t":16,"rt":$n[0].String,"g":{"a":2,"n":"get_Stack","t":8,"rt":$n[0].String,"fg":"Stack"},"fn":"Stack"},{"a":2,"n":"Success","t":16,"rt":$n[0].Boolean,"g":{"a":2,"n":"get_Success","t":8,"rt":$n[0].Boolean,"fg":"Success","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"fn":"Success"},{"a":2,"n":"Time","t":16,"rt":$n[0].Int32,"g":{"a":2,"n":"get_Time","t":8,"rt":$n[0].Int32,"fg":"Time","box":function ($v) { return Bridge.box($v, System.Int32);}},"s":{"a":2,"n":"set_Time","t":8,"p":[$n[0].Int32],"rt":$n[0].Void,"fs":"Time"},"fn":"Time"},{"a":2,"n":"Type","t":16,"rt":Function,"g":{"a":2,"n":"get_Type","t":8,"rt":Function,"fg":"Type"},"s":{"a":2,"n":"set_Type","t":8,"p":[Function],"rt":$n[0].Void,"fs":"Type"},"fn":"Type"},{"a":2,"n":"Visible","t":16,"rt":Bridge.virtualc("KnockoutObservable"),"g":{"a":2,"n":"get_Visible","t":8,"rt":Bridge.virtualc("KnockoutObservable"),"fg":"Visible"},"s":{"a":2,"n":"set_Visible","t":8,"p":[Bridge.virtualc("KnockoutObservable")],"rt":$n[0].Void,"fs":"Visible"},"fn":"Visible"}]}; });
    $m($n[3].Runner, function () { return {"att":1048576,"a":4,"m":[{"a":2,"n":".ctor","t":1,"sn":"ctor"},{"a":1,"n":"DiscoverTest","t":8,"sn":"DiscoverTest","rt":$n[0].Void},{"a":2,"n":"Run","t":8,"sn":"Run","rt":$n[0].Void},{"a":1,"n":"RunTests","t":8,"sn":"RunTests","rt":$n[0].Void},{"a":2,"n":"BrowserInfo","t":16,"rt":$n[0].String,"g":{"a":2,"n":"get_BrowserInfo","t":8,"rt":$n[0].String,"fg":"BrowserInfo"},"s":{"a":2,"n":"set_BrowserInfo","t":8,"p":[$n[0].String],"rt":$n[0].Void,"fs":"BrowserInfo"},"fn":"BrowserInfo"},{"a":2,"n":"FailedTests","t":4,"rt":Bridge.virtualc("KnockoutObservable"),"sn":"FailedTests"},{"a":2,"n":"HidePassed","t":4,"rt":Bridge.virtualc("KnockoutObservable"),"sn":"HidePassed"},{"a":2,"n":"PassedTests","t":4,"rt":Bridge.virtualc("KnockoutObservable"),"sn":"PassedTests"},{"a":2,"n":"Running","t":4,"rt":Bridge.virtualc("KnockoutObservable"),"sn":"Running"},{"a":2,"n":"Tests","t":4,"rt":Bridge.virtualc("KnockoutObservableArray"),"sn":"Tests"},{"a":2,"n":"TotalTests","t":4,"rt":Bridge.virtualc("KnockoutObservable"),"sn":"TotalTests"},{"a":2,"n":"TotalTime","t":4,"rt":Bridge.virtualc("KnockoutObservable"),"sn":"TotalTime"},{"a":1,"n":"_internalTests","t":4,"rt":$n[2].List$1(Bridge.EasyTests.TestDescriptor),"sn":"_internalTests"}]}; });
    $m($n[4].BeFalseException, function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[0].String],"pi":[{"n":"message","pt":$n[0].String,"ps":0}],"sn":"ctor"}]}; });
    $m($n[4].BeTrueException, function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[0].String],"pi":[{"n":"message","pt":$n[0].String,"ps":0}],"sn":"ctor"}]}; });
    $m($n[4].EasyTestBaseException, function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[0].String],"pi":[{"n":"message","pt":$n[0].String,"ps":0}],"sn":"ctor"}]}; });
    $m($n[4].EqualException, function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[0].String],"pi":[{"n":"message","pt":$n[0].String,"ps":0}],"sn":"ctor"}]}; });
    $m($n[4].NotEqualException, function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[0].String],"pi":[{"n":"message","pt":$n[0].String,"ps":0}],"sn":"ctor"}]}; });
    $m($n[4].ThrowsException, function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[0].String],"pi":[{"n":"message","pt":$n[0].String,"ps":0}],"sn":"ctor"}]}; });
    $m($n[5].TestAttribute, function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[0].String],"pi":[{"n":"description","pt":$n[0].String,"ps":0}],"sn":"$ctor1"},{"a":2,"n":"Description","t":16,"rt":$n[0].String,"g":{"a":2,"n":"get_Description","t":8,"rt":$n[0].String,"fg":"Description"},"fn":"Description"}]}; });
    $m($n[5].TestMethodAttribute, function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[0].String],"pi":[{"n":"description","dv":null,"o":true,"pt":$n[0].String,"ps":0}],"sn":"ctor"},{"a":2,"n":"Description","t":16,"rt":$n[0].String,"g":{"a":2,"n":"get_Description","t":8,"rt":$n[0].String,"fg":"Description"},"fn":"Description"}]}; });
    $m($n[6].EasyAsserts, function () { return {"att":1048961,"a":2,"s":true,"m":[{"a":2,"n":"AreEqual","is":true,"t":8,"pi":[{"n":"obj","pt":$n[0].Object,"ps":0},{"n":"second","pt":$n[0].Object,"ps":1}],"sn":"AreEqual","rt":$n[0].Void,"p":[$n[0].Object,$n[0].Object]},{"a":2,"n":"AreNotEqual","is":true,"t":8,"pi":[{"n":"obj","pt":$n[0].Object,"ps":0},{"n":"second","pt":$n[0].Object,"ps":1}],"sn":"AreNotEqual","rt":$n[0].Void,"p":[$n[0].Object,$n[0].Object]},{"a":2,"n":"ObjectEqual","is":true,"t":8,"pi":[{"n":"o1","pt":$n[0].Object,"ps":0},{"n":"o2","pt":$n[0].Object,"ps":1}],"sn":"ObjectEqual","rt":$n[0].Boolean,"p":[$n[0].Object,$n[0].Object],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"ShouldBeFalse","is":true,"t":8,"pi":[{"n":"expectesFalseCondition","pt":Function,"ps":0}],"sn":"ShouldBeFalse","rt":$n[0].Void,"p":[Function]},{"a":2,"n":"ShouldBeTrue","is":true,"t":8,"pi":[{"n":"expectesTrueCondition","pt":Function,"ps":0}],"sn":"ShouldBeTrue","rt":$n[0].Void,"p":[Function]},{"a":2,"n":"Throws","is":true,"t":8,"pi":[{"n":"action","pt":Function,"ps":0}],"tpc":1,"tprm":["T"],"sn":"Throws","rt":$n[0].Void,"p":[Function]},{"a":2,"n":"ToCompareString","is":true,"t":8,"pi":[{"n":"obj","pt":$n[0].Object,"ps":0}],"sn":"ToCompareString","rt":$n[0].String,"p":[$n[0].Object]}]}; });
    $m($n[6].ShouldExtensions, function () { return {"att":1048961,"a":2,"s":true,"m":[{"a":2,"n":"ShouldBeEquals","is":true,"t":8,"pi":[{"n":"obj","pt":System.Object,"ps":0},{"n":"secondObj","pt":System.Object,"ps":1}],"tpc":1,"tprm":["T"],"sn":"ShouldBeEquals","rt":$n[0].Void,"p":[System.Object,System.Object]},{"a":2,"n":"ShouldBeNotEquals","is":true,"t":8,"pi":[{"n":"obj","pt":System.Object,"ps":0},{"n":"secondObj","pt":System.Object,"ps":1}],"tpc":1,"tprm":["T"],"sn":"ShouldBeNotEquals","rt":$n[0].Void,"p":[System.Object,System.Object]}]}; });
});
